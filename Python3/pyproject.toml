[tool.poetry]
name = "atdsi"
version = "0.1.0"
description = "juanmirock's coding answers on AtDSI (1st-Edition) for Python3"
authors = ["Dr. Juan Miguel Cejuela <i@juanmi.rocks>"]
license = "MPL-2.0"
readme = "README.md"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# -----------------------------------------------------------------------------


[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.25.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.4.1"
pyflakes = "^3.0.1"
bandit = "^1.7.5"
black = "^23.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.plugins.dependencies]
poethepoet = "^0.21.1"


# -----------------------------------------------------------------------------


[tool.pytest.ini_options]
testpaths = [
  "atdsi/ch*/q*"
]


[tool.black]
line-length = 120


[tool.mypy]
files = ["atdsi"]


[tool.bandit.assert_used]
# Ignore because we use `assert` for testing (with pytest) right in the same code files
skips = ["*.py"]


# poethepoet: python & shell scripts to run within poetry: https://poethepoet.natn.io/
[tool.poe.tasks]
# format code
fmt = "black ."

# run tests with coverage -- for now do not use xdist's `-n auto` option
test = "pytest --cov=atdsi --cov-report=term-missing --cov-report=lcov:.cov/coverage.lcov" # HTML possible too: --cov-report=html:.cov/html"

# Checks the validity of the pyproject.toml file
lint_package = "poetry check"

lint_errors = "pyflakes ."

# For now ignore possible non 0 exit code; but at least report warnings & errors
lint_types.shell = "mypy || true"
lint_types_strict.shell = "mypy --strict || true"

lint_bandit = "bandit -c pyproject.toml -r ."
# snyk is not installed as a python dependency, but as a shell command (see how to install Snyk CLI: https://docs.snyk.io/snyk-cli/install-the-snyk-cli)
lint_snyk.shell = "snyk code test; snyk test"
lint_sec = ["lint_bandit", "lint_snyk"]

# Snyk not added here since it might not be installed in the system
lint_all = ["lint_package", "lint_errors", "lint_types", "lint_bandit"]

test_n_lint = ["test", "lint_all"]
